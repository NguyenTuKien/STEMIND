import os
import json
import boto3
import re
from datetime import datetime
from botocore.exceptions import ClientError
from django.conf import settings
from django.core.files.storage import default_storage
from django.core.files.base import ContentFile

class FileExportService:
    def __init__(self):
        self.s3_client = boto3.client(
            's3',
            aws_access_key_id=settings.AWS_ACCESS_KEY_ID,
            aws_secret_access_key=settings.AWS_SECRET_ACCESS_KEY,
            region_name=settings.AWS_S3_REGION_NAME
        )
        self.bucket_name = settings.AWS_STORAGE_BUCKET_NAME



    def save_html_to_s3(self, html_content: str, filename: str) -> str:
        """L∆∞u file HTML l√™n AWS S3"""
        try:
            # T·∫°o ƒë∆∞·ªùng d·∫´n cho file HTML
            html_filename = filename.replace('.pdf', '.html')
            s3_path = f"media/chatbot_exports/{html_filename}"
            
            # Upload l√™n S3
            self.s3_client.put_object(
                Bucket=self.bucket_name,
                Key=s3_path,
                Body=html_content.encode('utf-8'),
                ContentType='text/html',
                ACL='public-read'
            )
            
            # Tr·∫£ v·ªÅ URL c·ªßa file HTML
            html_url = f"https://{self.bucket_name}.s3.amazonaws.com/{s3_path}"
            print(f"‚úÖ ƒê√£ l∆∞u HTML l√™n S3: {html_url}")
            
            return html_url
            
        except Exception as e:
            print(f"‚ùå L·ªói khi l∆∞u HTML l√™n S3: {e}")
            return None

    def convert_html_to_pdf(self, html_url: str, pdf_filename: str) -> str:
        """Chuy·ªÉn ƒë·ªïi HTML th√†nh PDF b·∫±ng html_to_pdf service"""
        try:
            # Import html_to_pdf service (gi·∫£ s·ª≠ b·∫°n ƒë√£ c√≥)
            from .html_to_pdf import HTMLToPDFService
            
            pdf_service = HTMLToPDFService()
            pdf_content = pdf_service.convert_url_to_pdf(html_url)
            
            if pdf_content:
                # L∆∞u PDF l√™n S3
                s3_path = f"media/chatbot_exports/{pdf_filename}"
                
                self.s3_client.put_object(
                    Bucket=self.bucket_name,
                    Key=s3_path,
                    Body=pdf_content,
                    ContentType='application/pdf',
                    ACL='public-read'
                )
                
                # Tr·∫£ v·ªÅ URL c·ªßa file PDF
                pdf_url = f"https://{self.bucket_name}.s3.amazonaws.com/{s3_path}"
                print(f"‚úÖ ƒê√£ l∆∞u PDF l√™n S3: {pdf_url}")
                
                return pdf_url
            else:
                print("‚ùå Kh√¥ng th·ªÉ chuy·ªÉn ƒë·ªïi HTML th√†nh PDF")
                return None
                
        except Exception as e:
            print(f"‚ùå L·ªói khi chuy·ªÉn ƒë·ªïi HTML th√†nh PDF: {e}")
            return None

    def export_to_pdf(self, content: str, filename: str, title: str = "STEMIND Document") -> str:
        """
        Xu·∫•t n·ªôi dung th√†nh PDF th√¥ng qua HTML
        Returns: URL c·ªßa file PDF tr√™n S3
        """
        try:
            print(f"üîÑ B·∫Øt ƒë·∫ßu xu·∫•t file: {filename}")
            
            # 1. T·∫°o n·ªôi dung HTML
            html_content = self.create_html_content(content, title)
            print("‚úÖ ƒê√£ t·∫°o n·ªôi dung HTML")
            
            # 2. L∆∞u HTML l√™n S3
            html_url = self.save_html_to_s3(html_content, filename)
            if not html_url:
                raise Exception("Kh√¥ng th·ªÉ l∆∞u HTML l√™n S3")
            
            # 3. Chuy·ªÉn ƒë·ªïi HTML th√†nh PDF
            pdf_url = self.convert_html_to_pdf(html_url, filename)
            if not pdf_url:
                raise Exception("Kh√¥ng th·ªÉ chuy·ªÉn ƒë·ªïi HTML th√†nh PDF")
            
            print(f"üéâ Ho√†n th√†nh xu·∫•t file: {pdf_url}")
            return pdf_url
            
        except Exception as e:
            print(f"‚ùå L·ªói trong qu√° tr√¨nh xu·∫•t file: {e}")
            return None

    def cleanup_temp_files(self, html_url: str = None):
        """D·ªçn d·∫πp file t·∫°m (t√πy ch·ªçn)"""
        try:
            if html_url:
                # X√≥a file HTML t·∫°m n·∫øu c·∫ßn
                html_key = html_url.split('.com/')[-1]
                self.s3_client.delete_object(
                    Bucket=self.bucket_name,
                    Key=html_key
                )
                print("‚úÖ ƒê√£ x√≥a file HTML t·∫°m")
        except Exception as e:
            print(f"‚ö†Ô∏è Kh√¥ng th·ªÉ x√≥a file t·∫°m: {e}")

